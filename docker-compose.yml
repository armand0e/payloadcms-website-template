services:
  app:
    build:
      context: .
      args:
        PAYLOAD_SECRET: ${PAYLOAD_SECRET:-your-secret-here-change-in-production}
        POSTGRES_URI: postgresql://payload:payload@db:5432/payload
        NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PAYLOAD_SECRET: ${PAYLOAD_SECRET:-your-secret-here-change-in-production}
      POSTGRES_URI: postgresql://payload:payload@db:5432/payload
      NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL:-http://localhost:3000}
    volumes:
      - uploads:/app/public/media
    restart: unless-stopped
    user: "0:0"

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: payload
      POSTGRES_USER: payload
      POSTGRES_PASSWORD: payload
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  uploads:
